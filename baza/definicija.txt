CREATE DATABASE darivanjeKrvi;
CREATE TABLE Korisnik
(
  ime VARCHAR(100) NOT NULL,
  prezime VARCHAR(100) NOT NULL,
  OIB CHAR(11) NOT NULL,
  krGrupa ENUM ('A+', 'A-', 'B+', 'B-', '0+', '0-', 'AB+', 'AB-') NOT NULL,
  MBO CHAR(9) NOT NULL,
  spol ENUM ('MUŠKO', 'ŽENSKO', 'OSTALO') NOT NULL,
  dob INT NOT NULL,
  mjStan VARCHAR(100) NOT NULL,
  favKBC VARCHAR(100) NOT NULL,
  verificiran BOOL DEFAULT False,
  PRIMARY KEY (MBO),
  UNIQUE (OIB),
   CONSTRAINT dob CHECK (dob >= 18)	
);

CREATE TABLE Administrator
(
  mail VARCHAR(100) NOT NULL,
  lozinka VARCHAR(100) NOT NULL,
  PRIMARY KEY (Mail)
);

CREATE TABLE Akcija
(
  idAkcija INT NOT NULL,
  adresa VARCHAR(100) NOT NULL,
  datumPoc DATE NOT NULL,
  datumKraj DATE NOT NULL,
  krGrupa ENUM ('A+', 'A-', 'B+', 'B-', '0+', '0-', 'AB+', 'AB-'),
  hitna BOOL NOT NULL,
  imeLokacije VARCHAR(100) NOT NULL,
  mail VARCHAR(100) NOT NULL,
  FOREIGN KEY (Mail) REFERENCES Administrator(Mail),
  PRIMARY KEY (IdAkcija)
);

CREATE TABLE KBC
(
  adresa VARCHAR(100) NOT NULL,
  ime VARCHAR(100) NOT NULL,
  PRIMARY KEY (Ime)
);

CREATE TABLE Rezervacija
(
  vrijemePoc DATETIME NOT NULL,
  idRezervacija INT NOT NULL,
  imeLokacije VARCHAR(100) NOT NULL,
  MBO CHAR(9) NOT NULL,  
  PRIMARY KEY (IdRezervacija),
  FOREIGN KEY (MBO) REFERENCES Korisnik(MBO)
);

CREATE TABLE Termini
(
  vrijemePoc TIMESTAMP NOT NULL,
  vrijemeKraj TIMESTAMP NOT NULL,
  zauzeto BOOL NOT NULL,
  imeLokacije VARCHAR(100) NOT NULL,
  idTermin INT NOT NULL,
  datum DATE DEFAULT (CURDATE() + INTERVAL 1 DAY),
  PRIMARY KEY (idTermin)
);

ALTER TABLE Termini
    MODIFY COLUMN VrijemeKraj TIME DEFAULT (ADDTIME(VrijemePoc, '00:30:00'));

CREATE TABLE LoginInfo
(
  mail VARCHAR(100) NOT NULL,
  lozinka VARCHAR(100) NOT NULL,
  MBO CHAR(9) NOT NULL,
  PRIMARY KEY (Mail),
  FOREIGN KEY (MBO) REFERENCES Korisnik(MBO)
);

CREATE VIEW Povijest AS
SELECT *
FROM Rezervacija JOIN Korisnik USING (mbo)
WHERE DATE(vrijemePoc) < curdate();

CREATE VIEW slobodniTermini AS 
SELECT vrijemePoc, vrijemeKraj, datum, imeLokacije
from Termini
where zauzeto = False;

--update datuma u terminima
DELIMITER //
CREATE EVENT UpdateTerminiDate
ON SCHEDULE EVERY 1 DAY
STARTS CURRENT_TIMESTAMP
DO
BEGIN
  UPDATE Termini
  SET datum = DATE_ADD(CURDATE(), INTERVAL 1 DAY);
  UPDATE Termini
  SET zauzeto = 0;
END;
//
DELIMITER ;
ALTER EVENT UpdateTerminiDate ENABLE;
SET GLOBAL event_scheduler = ON;
